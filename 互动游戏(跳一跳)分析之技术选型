互动背景：
零售通买家端经过两年业务、技术的成长，需要越来越多的交互形式来承载日益丰富的场景。伴随业务的成长，前端这个过程中，从早期集中精力于性能体验优化、工程化，到如今开始考虑融入更多富互动的场景。

2020财年零售通JBP签约品牌3月正式发布（预计130家品牌参与，年度JBP投入1.5亿），百家品牌合作的正式对外发声，我们需要一个互动形式为品牌做曝光。参与互动的小店可获得商家大额品牌券，为平台拉动交易。互动过程的红包和实物大奖由品牌商投入，未来可以尝试利用互动阵地创造新财年的广告投入新场景。

这里我们选择了互动游戏的形式，通过互动玩法引入品牌方资源，将趣味性和品牌券结合，提升平台互动和对小店的黏性。



技术调研：
移动供应商不断提升网络速度，降低资费，各手机厂商也不断提升手机性能，得益于此，近几年互动动画得到快速发展和运用。很多主流应用和站点，对于H5游戏互动的支持越来越多。

早期很多人会选择在canvas实现动画，但canvas提供的API太过薄弱，于是大家开始尝试各种技术，以寻求该领域在性能、开发、呈现等多方面整体提升。这也就诞生了越来越多的Web游戏开发形式。归纳下来，主要有三种形式：纯DOM+CSS来实现；svg实现；canvas、webgl实现。也有人提出来Hybird Native Web开发游戏理念，尝试寻找另一种端开发、呈现形式。这里，笔者就比较主流的几种H5动画、游戏开发引擎做对比分析，以寻找和确定适合零售通买家端场景的技术类型。



一、Construct2
​
​

Construct2是由Scirra有限公司开发的一款跨平台HTML5游戏引擎。Construct2采用了类似Photoshop的图层处理模式，实现物体与图层的叠放式分隔处理。

1、优点
Construct2是一个基于事件运作的2D轻量级游戏引擎，通过事件循环监听来反馈视图变化。
Construct2提供了丰富的事件、特效、素材等。
通过拖拽添加对象、素材、事件等，即可完成动画，无需任何coding。
Construct2可生成多种开发语言（付费版），运行于多个平台。
2、缺点
Construct2更像是一个面向非开发人员的动画开发引擎，缺乏了代码控制动画的能力。
可扩展性比较低，对于面对复杂场景、具备开发基础的同学来说，这一缺点无疑是致命的。
Construct2无法直接打包，需要借助工具
你需要不错的英语水平


二、three.js
​
​

WebGL是一种绘图规范，可以简单理解为JavaScript和OpenGL ES 2.0结合，给OpenGL ES 2.0增加JavaScript绑定，使得WebGL可以为Canvas提供硬件3D加速渲染。

最早开发前端3D效果时，需要掌握WebGL规范，反复学习WebGL原生API，学习成本非常高，开发过程对于大多数人而言，非常痛苦。而three.js的出现，大大提升了这类同学的开发效率，收敛很多麻烦的操作，让WebGL变得亲民了一些。

1、优点
three.js收敛了WebGL复杂难懂的原生API，抽象成Camera、Renderer、Scene，提供了上层API。
适合做重点在“呈现”的web项目。
开发者可以使用上层的JS对象，而非仅仅使用函数
three.js提供了丰富的内置对象，方便开发者制作特殊的视觉效果
在扩展WebGL上，three.js提供了WebGL不支持的交互（picking）能力
动画算法库丰富
多种渲染形式（canvas/css/svg）
2、缺点
大多数3D场景的声效、操作、数据获取等都依赖设备底层能力，比如摄像头、重力传感器、通讯、声控等。three.js在这方面还不够强大，复杂交互的场景开发时具备一定的挑战。


三、CreateJS
​
​

CreateJS是基于HTML5开发的一套模块化的库和工具。基于这些库，可以非常快捷地开发出基于HTML5的游戏、动画和交互应用。

1、优点
生而为H5游戏
具备flash转H5动画的能力
独立的类库模块（easelJS/tweenJS/soundJS/PreloadJS）,丰富的API，可独立使用，也可组合使用。
因为其模块独立，所以CreateJS是非常轻量的
学习成本低，可以很方便地利用API开发出H5游戏或者交互动画
Adobe背景，工具厂做的工具，稳定性高，官方提供很多工具，如AdobeAnimate/TexturePacker等
类似图层概念，提供了动画的分层处理，解耦了不同sprit，开发逻辑更为清晰。
2、缺点
只支持canvas2D渲染
性能上帧率较低，ceratejs默认30帧，在高端设备上，ceratejs的帧率可以跑到60帧（各厂商近一两年的旗舰机），在低端老旧设备上（四五年前的千元机），帧率效果比较差。
版本更新迭代慢


四、lycheeJS
​
​

lycheeJS提供了一套H5 canvas基于WebGL的完整的解决方案，是一个独立的JS游戏引擎。

1、优点
同时适用于主流浏览器和本地环境
丰富的开发工具，同时开发过程对chrome做了定制优化，开发更为顺畅
提供了CDN、WebSockets、SPDY、HTTP2.0以及游戏截图的支持


2、缺点
生态小，遇到问题寻求解决问题的途径少
lycheeJS的API目前丰富程度不够


五、ImpactJS
​
​

impactJS是一款强大的2D游戏开发引擎。(官方说：Impact is a JavaScript Game Engine that allows you to develop stunning HTML5 Games for desktop and mobile browsers.)

1、优点
从官方的描述可以看出impactJS具备跨平台能力
Weltmeister提供了快速编辑界面的能力
具备强大的调试能力，可快速定位游戏实体和渲染问题。
有很多第三方工具的支持，如Appmobi、phonegap，Box2D等。
可扩展自定义插件
2、缺点
收费软件
近期的功能更新迭代很少


六、LimeJS
​
​

LimeJS可用来制作快速运行的浏览器游戏，LimeJS是通过函数和类来管理事件、时间、形状最终形成动画、游戏。

1、优点
基于GoogleClosureLibrary开发，继承了Closure代码易读易懂、架构清楚的特性。
封装了很多开发时需要的实体（如Scene、Event和Animation）
丰富的开发文档支持上手和维护
2、缺点
依赖Google Closure


选型
1、零售通场景分析
考虑到多个互动形式（红包雨、直播）在同一个应用内(零售通APP)，且都为大促活动场景，互动项目相互之间应该具备一定的相似性。红包雨和直播的特点是：互动发券、互动发红包、互动交流，所以，选择的技术应该在“互动”上提供足够的支持，而非仅仅注重“呈现”。
零售通买家目前机型多为中端机型。3D的互动项目对于这类机型来说，GPU压力过大，帧率等方面的表现将会受到很大的技术考验。相比之下，2D的表现会优雅很多。
我们的互动目前主要服务场景是大促场景，未来会嵌入APP内增加小店互动提升粘性。面对这类“页面少”“并发高”的场景，我们希望选择的技术能够尽量轻量化、同时稳定性高。
当下零售通前端对于“游戏互动”的探索还处于前期阶段，选型技术对于对于底层能力，如“获取手机的传感器信息”、“唤起相机”、“控制扬声器”等，没有太严格的支撑要求。
学习成本也是我们当前考虑的因素之一


结论：从性能消耗、学习成本、支撑能力、轻量化等角度来考虑，CreateJS是一个非常不错的选择。



2、游戏项目选择
笔者考察了天猫、蚂蚁、飞猪等多个团队的互动项目。最终选择了飞猪团队的“飞猪探路”作为我们项目的参考原型。主要有以下几点：

游戏形式考虑
我们的客户是小店主。小店主随时需要“结账”，单局游戏时间过长，店主可能会放弃游戏。

同时，我们希望游戏可以重复多次玩。

笔者试过，“飞猪探路”单局游戏时间平均只需要20~40秒

难度控制的考虑
活动机制一是达到一定条件后才可以参与瓜分奖池。这里需要对于不同玩家来说，游戏得分要差异化。

活动机制二是单局达到一定分数可以获得品牌券。这里就需要单局游戏的难度是随单局时间渐增的。

“飞猪探路”的难度控制对于反应力不同的玩家来说，得分会不同，随着楼梯的增加难度逐渐上升的。

品牌展示的考虑
根据当前零售通签署JBP的情况，预计130家品牌参与。所以，我们需要有足够的地方来呈现如此众多的品牌            LOGO，“飞猪探路”里不断产生和释放的块状台阶，符合我们的期望。



大促时服务器压力
“飞猪探路”在单局游戏中，只有游戏结束时，才需要上报游戏得分数据，游戏过程中并不需要任何数据请求。

技术类型和开发成本
通过对“飞猪探路”的了解，其使用的技术正是CreateJS。技术类型符合我们期望，开发成本相对可控。



总结：
这里，叙述了零售通跳一跳互动游戏的技术和项目调研以及选择的过程。也是笔者对于互动技术尝试和学习的一个过程。不对、欠妥以及需要完善处，欢迎指正。
